Timestamp	What was your team's general take on reproducibility before taking this class? What did you all know or think about it before taking this class?	After taking this class, what are your team's thoughts on reproducibility?	How did your team work in a reproducible manner? 	How does your team see themselves applying what they've learned in this class about reproducibility into their future work?	Are there any cool things happening in the world regarding reproducibility that your team would like us to showcase for our presentation?	What did you think collaboration was before this class?	After taking this class, has your views changed? If so, how?	How did your team work collaboratively?	What tools or methods do you think you will use in the future in terms of collaboration? What will you not use?	Any notes from your team on what worked and what didn't in terms of managing the earthquake project?
12/6/2013 23:24:39	I know that for me, my approach to reproducibility was solely relegated to just writing good and clear comments of what your code does and what parameters it takes in. I was not too familiar with version control like git and technology like VirtualBoxes before this course.	I think it's a very important part of science now and in the future. If someone is not able to reproduce your work, then your findings should be deemed invalid because how do we know whether or not the work is really defensible.	We used github extensively and created presentations with links to where people can find and run our code. 	I will certainly continue using all the tools that we learned in this class as I hope to apply my skills to a data science career in the future. Things like github and the ipython notebook, d3 and other visualization tools will become extremely important for me going forward.	I really enjoyed Fernando Perez's talk that he gave last week. I believe the GSIs emailed out a link containing his suggested resources.	Just gathering together as a group and takling about what needed to be done and who did what.	It has certainly evolved beyond my initial conceptions. Now, I view it as all of us being one finely tuned machine. If one part breaks or is defective, then the entire machine or system will fail. But with all of us working together and doing our own specialized tasks, we can make something beautiful	Github, facebook, email, texting, and scheduled group meetings and office hours.	Will certainly use Github and ipython. Not sure about virtual machines. 	Our group was able to make our meetings fruitful and efficient. What didn't work well was being in confusion with what the rest of the groups were doing. 
12/7/2013 16:09:12	None of use thought that this class would be about reproducibility in the way that it has been shown in the class so far. We thought that this class would be structured in a way where we would focus on learning a computing language (such as Python or SQL) and then spend a few weeks doing homework assignments and projects related to the language until moving forward to the next topic. Some of our group members had no idea what reproducibility represented nor did we know how it related to science as a field. Others have experienced the process either through internships prior to this class or through other CS courses. However as statistics majors, we had no experience with the subject before.	Reproducibility is useful if one is going to go into the field of research as well as for working within a company setting. There will always be human interaction at any level of work throughout life and learning to document one's work is always important for anyone interested in your work. Although this class did not meet our expectations in the areas that it promised (on the schedule catalog), it did exceed our expectations in what it did teach us, even if it was a painstaking process initially.	Our group consisted of three analyzers and one presenter. The three analyzers worked on the core problem of the Luen/Stark and MDA models while the presenter took notes within meetings and posted our discussions on Github so that anyone interested could find it. We used iPython Notebook for our code so that others who were interested in our work could run through the same code if they knew how to operate through a VM and reach our notebook. 	Reproducibility is useful if one is going to go into the field of research as well as for working within a company setting. There will always be human interaction at any level of work throughout life and learning to document one's work is always important for anyone interested in your work. This class taught us that some work harder than others within a group and outside the group and that working through these hardships is a part of life no matter where you work. Conflict resolution and keeping others on task were huge takeaways from this class as well as being able to show your work through a medium where anyone, anywhere could find it.	None that we can think of so far. Here is a link to something but I haven't made an account to access it: https://openscienceframework.org/project/EZcUj/wiki/home/	We thought that it meant working together as a cohesive group to finish a task within a specific due date. We thought that everyone would be cooperative, except for a few loafers, and that even though the path might not be as smooth as the ideal, it would still be a necessary path to take.	Yes and no. We knew coming in to this class that some would work harder than others, some would have more to contribute than others, and that some would try passive-aggressive ways to confront others. These are all parts of the human condition in trying to further oneself over his/her fellow man/woman, especially in a highly competitive environment here at Berkeley. 	We set deadlines and meeting times through Google Calender, Facebook chat, Gmail, Github, and IRC (although this faded exponentially as the semester went on). We held each other accountable for meetings as a group and that set a precedent throughout the semester.	We would use Github, email, Google Calender, Facebook chat, and anything else that all members within a group would recognize as a fair medium of communication.   We would not use IRC (maybe it was a generational thing that has since been replaced by Facebook chat). IRC looks like a good, efficient idea but it is used less due to the prevalence of FB chat.	Meeting regularly as a group once or twice (sometimes 3 times!) as week really helped us finish our work both before and after classes so that when we entered class, we were more well prepared than our colleagues.   What didn't help was that some groups as a whole worked harder than other groups and trying to work in parallel with these groups caused us to lag behind as we had to wait for them to catch up. Since there was no administrative power to force anyone to work within a set deadline, some groups took advantage of this and decided to backload all of their work at the end, which caused more stress on other groups who needed them.
12/7/2013 17:11:59	The General task was the confirmation that the various repos from other groups could be reproduced on other computers ensuring the basic concept of experimentation. In order for something to scientifically exist, an experiment much be repeated with the same results	We had been talking about making scientific work reproducible, and instead of processing code in one place, saving output in another, creating visualizations in another, and then pasting it all into a presentation, IPython does it all in one place. 	We have been checking repos, code, and readmes in order to ensure that the repos that groups have contain processes that are defined as reproducible. 	We are making sure that the work that is currently being done isnt going into some black hole in the internet because people can make sense of it. It is being made reproducible so that if we cannot continue the problem other groups might be able to pick up where we stopped.	This is kind of a weird question, we are applying the concepts of reproducibility, but the theory behind it is being analyzed by another group.   	One person does one thing and then another person just does another thing. But the only thing that drew us together was a final product.  In this class, it was about being interconnected at all times. We relied on groups, and groups relied on us. It wasn't about coming together at the very end. 	Yes, beforehand, the ability to reproduce code was a secondary factor when coding. It was always, let me get this to work and worry about reproducibility later if I have time. Now, much of my code has been designed to making sure both are equally important.	We met up every week, sometimes multiple times per week and had a clear form of communication (Thank you facebook), IRC was not a smart idea since we had this messager already at our disposal. 	iPython notebook, Virtual Box, and gitHub have been instrumental in ensuring Reproducibility can be acheive. Rstudio has also been applied.	It wasn't easy to communicate with other groups because many were not very active gitHub users or did not have detailed readmes. In the end, we decided to only work to reproduce some groups. 
12/8/2013 23:37:05	Before this class, my idea of reproducibility was limited to the idea of utilizing functions in which you can input various parameters to yield a dynamic output. I had never considered the difficulties inherent in creating reproducible data, or even why it may be important to have reproducible data science.	After taking this class, our team has learned that producing reproducible work is essential in science. For example, we were part of the Skype conversation with Professor Luen. After discussing the Earthquake problem with him, we realized that there were many components of his work that are not reproducible. This is a hindrance because other people, and even Luen himself, are unable to decipher what parts of the data imply. This also prevents other scientists from building off Luen’s work.	Our team utilized many of the tools that we were introduced to in this course to create reproducible work, such as GitHub and iPython Notebook. This was effective, because it allowed us to work on different parts of a problem while continuing to share content with each other.   Beyond the specific tools, the class taught us how to develop a reproducible mindset. We now understand the importance of writing specific steps down so that, in the future, someone else can produce the same work. It’s also eliminated a bit of the competitive spirit that traditional academia entails; rather than compete to produce the “best” work, our team has learned the effectiveness of building off others’ work, as well as sharing work, to contribute to an overarching goal.  We did several things to ensure reproducibility, including documenting our code and listing dependencies in addition to documenting our methods. Aside from this, when it came to writing code, we tried to use variable names that were meaningful and structured our code so that it was easier to understand albeit less efficient.	Although the specific tools we learned may not always be utilized in the workplace, the reproducible mindset will continue to permeate our work, both in and out of class. By maintaining a habit of describing the steps taken to achieve a goal, this will help us optimize our time in the future when we wish to reproduce our work in some way. It will also help us in terms of teaching; many times when I am trying to help one of my classmates or colleagues, I realize that I’ve forgotten some of the minute details of the task. However, keeping the required steps will help the collaborating/mentoring process.	N/A	Collaboration typically only occurs during class projects. Typically, working with other students involves a few people carrying most of the weight, a handful doing the bare minimum, and a few riding on everyone else’s coattails. Because of this, collaboration is often despised by students, who end up having to do more work than they should.	Although the tiers of students was not any different for this class, my view on collaboration has changed significantly. This class showed that in order for a team to be successful, it is essential for leaders to emerge. These leaders, who understand the “big picture”, are critical to the overall project. These are the individuals who understand how to create timelines and benchmarks so that the rest of the team has a model to follow.   Our group recognized that without this leadership, chaos will emerge. Rather than dreading collaboration, the class has shown us that it is important for individuals to establish their skills so that everyone can play their strengths.	Our team was extremely successful in terms of collaboration. This is mainly attributed to the fact that we were in continual communication with one another. Whether we were providing updates on what we were working on, or organizing team-bonding activities, we made an effort to get to know each other on both a personal and professional level. Because we were comfortable with one another, we effortlessly were able to collaborate.   We learned that it is essential for a team to be comfortable with one another on a personal level in order to effectively work together.   We primarily used Facebook and email to communicate with each other, and GitHub to collaborate in terms of projects.	iPython Notebook is an extremely useful resource that we definitely see us using in the future.	As mentioned earlier, it is essential to work with a team you are comfortable with and you can communicate well with. It is also important for leaders to naturally emerge to provide guideline and eliminate chaos that is inherent in working on a real-world project.